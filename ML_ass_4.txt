
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, precision_score, recall_score, f1_score, accuracy_score

df=pd.read_csv('diabetes.csv')
df.head()

df.isna().sum()

df.drop_duplicates(inplace=True)

df.info()
  
df.describe() 

df.columns

deff=df
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X =  pd.DataFrame(sc_X.fit_transform(deff.drop(["Outcome"],axis = 1),),
 columns=['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin','BMI', 'DiabetesPedigreeFunction', 'Age'])
y = deff.Outcome

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=1/3,random_state=42, stratify=y)

knn_classifier = KNeighborsClassifier(n_neighbors = 11)
knn_classifier.fit(X_train, y_train)
y_pred_knn=knn_classifier.predict(X_test) 

print("Confusion matrix")
cmat=confusion_matrix(y_test,y_pred_knn)
print(cmat)

ax = sns.heatmap(cmat, annot=True, cmap='Blues')
ax.set_title('Seaborn Confusion Matrix with labels\n\n');
ax.set_xlabel('\nPredicted Values')
ax.set_ylabel('Actual Values ');
plt.show()

print('Accuracy Score: {:.2%}'.format(accuracy_score(y_test,y_pred_knn)))

print('Precision: {:.2%}'.format(precision_score(y_test, y_pred_knn)))

print('Recall: {:.2%}' .format( recall_score(y_test, y_pred_knn)))